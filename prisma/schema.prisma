datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  //shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider        = "prisma-client-js"
  //previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  hashPass       String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}



model auser {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       String    @db.VarChar(255)
  lastname   String    @db.VarChar(255)
  StudentID  String    @db.VarChar(255)
  Gender     String    @db.VarChar(255)
  Kurso      String    @db.VarChar(255)
  username   String    @db.VarChar(255)
  password   String    @db.VarChar(255)
  auth       String?   @db.VarChar(255)
  campus     String?   @db.VarChar(255)
  reg_date   DateTime? @default(now()) @db.Timestamp(0)
  last_login DateTime? @default(now()) @db.Timestamp(0)
}

model collection_mgr {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  parent      String    @db.VarChar(255)
  name        String    @db.VarChar(255)
  code        String    @db.VarChar(255)
  campus      String?   @db.VarChar(255)
  description String?   @db.VarChar(500)
  glink       String?   @db.VarChar(255)
  reg_date    DateTime? @default(now()) @db.Timestamp(0)
}

model community_mgr {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  name        String    @db.VarChar(255)
  code        String    @db.VarChar(100)
  campus      String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  glink       String?   @db.VarChar(255)
  reg_date    DateTime? @default(now()) @db.Timestamp(0)
}

model filestorage {
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  filename String    @db.VarChar(255)
  data     Bytes     @db.Blob
  reg_date DateTime? @default(now()) @db.Timestamp(0)
}

model metadata {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  title         String    @db.VarChar(755)
  author        String    @db.VarChar(555)
  taon          String    @db.VarChar(255)
  call_number   String?   @db.VarChar(255)
  barcode       String    @db.VarChar(255)
  abstract      String?   @db.Text
  kurso         String    @db.VarChar(300)
  filename      String?   @db.VarChar(255)
  subjek        String    @db.VarChar(255)
  curator       String?   @db.VarChar(255)
  updateby      DateTime? @db.Timestamp(0)
  col           String?   @db.VarChar(255)
  com           String?   @db.VarChar(255)
  campus        String?   @db.VarChar(255)
  raw_data      String    @db.Text
  record_status String?   @db.VarChar(255)
  glink         String?   @db.VarChar(255)
  glinkP        String?   @db.VarChar(255)
  glinkView     String?   @db.VarChar(255)
  embargo       String?   @db.VarChar(20)
  reg_date      DateTime? @default(now()) @db.Timestamp(0)
}

model my_request {
  rid        Int       @id @default(autoincrement()) @db.UnsignedInt
  m_barcode  String    @db.VarChar(255)
  user_id    String    @db.VarChar(255)
  username   String    @db.VarChar(255)
  status     String    @db.VarChar(255)
  reg_date   DateTime? @default(now()) @db.Timestamp(0)
  expiration DateTime? @default(now()) @db.Timestamp(0)
  campus     String?   @db.VarChar(255)
}

model mydocuments {
  id_doc      Int       @id @default(autoincrement()) @db.UnsignedInt
  metadata_id Int
  user_id     Int
  a_right     String    @db.VarChar(255)
  campus      String?   @db.VarChar(255)
  reg_date    DateTime? @default(now()) @db.Timestamp(0)
  expiration  DateTime? @default(now()) @db.Timestamp(0)
}

model statistics_login {
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  username String    @db.VarChar(255)
  campus   String    @db.VarChar(255)
  u_name   String    @db.VarChar(255)
  U_group  String?   @db.VarChar(255)
  gender   String?   @db.VarChar(255)
  auth     String?   @db.VarChar(255)
  bulan    String?   @db.VarChar(255)
  reg_date DateTime? @default(now()) @db.Timestamp(0)
}

model statistics_m {
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  bk_ID    String    @db.VarChar(255)
  title    String?   @db.VarChar(255)
  author   String?   @db.VarChar(255)
  username String?   @db.VarChar(255)
  campus   String?   @db.VarChar(255)
  u_name   String?   @db.VarChar(255)
  U_group  String?   @db.VarChar(255)
  gender   String?   @db.VarChar(255)
  auth     String?   @db.VarChar(255)
  bulan    String?   @db.VarChar(255)
  reg_date DateTime? @default(now()) @db.Timestamp(0)
}

model statistics_mold {
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  bk_ID    String    @db.VarChar(255)
  u_name   String    @db.VarChar(255)
  campus   String?   @db.VarChar(255)
  U_group  String?   @db.VarChar(255)
  reg_date DateTime? @default(now()) @db.Timestamp(0)
}

model subcommunity_mgr {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  parent      String    @db.VarChar(255)
  sibling     String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  code        String    @db.VarChar(255)
  campus      String?   @db.VarChar(255)
  description String?   @db.VarChar(500)
  glink       String?   @db.VarChar(255)
  reg_date    DateTime? @default(now()) @db.Timestamp(0)
}
